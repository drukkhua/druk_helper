"""
AI —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º RAG
Retrieval-Augmented Generation —Å –≤–µ–∫—Ç–æ—Ä–Ω—ã–º –ø–æ–∏—Å–∫–æ–º –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
"""

import logging
from typing import Dict

from business_hours import is_business_time
from config import Config


logger = logging.getLogger(__name__)


class AIService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è AI-–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""

    def __init__(self):
        self.config = Config()
        self.enabled = self.config.AI_ENABLED
        self.fallback_to_templates = self.config.AI_FALLBACK_TO_TEMPLATES

        # –ü–æ–∫–∞ —á—Ç–æ –∑–∞–≥–ª—É—à–∫–∏ - –±—É–¥–µ–º —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –ø–æ—à–∞–≥–æ–≤–æ
        self.vector_store = None
        self.llm = None
        self.embeddings = None

        if self.enabled:
            logger.info("AI Service –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ —Ä–µ–∂–∏–º–µ: ENABLED")
        else:
            logger.info("AI Service –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ —Ä–µ–∂–∏–º–µ: DISABLED (fallback to templates)")

    def is_available(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å AI —Å–µ—Ä–≤–∏—Å–∞"""
        if not self.enabled:
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
        if not self.config.OPENAI_API_KEY:
            logger.warning("AI Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç OPENAI_API_KEY")
            return False

        # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤–µ–∫—Ç–æ—Ä–Ω—É—é –ë–î –∏ –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        return True

    async def process_query(self, user_query: str, user_id: int, language: str = "ukr") -> Dict:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Args:
            user_query: –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            language: –Ø–∑—ã–∫ –æ—Ç–≤–µ—Ç–∞ ("ukr" –∏–ª–∏ "rus")

        Returns:
            Dict —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏:
            {
                "success": bool,
                "answer": str,
                "confidence": float,
                "source": str,  # "ai" –∏–ª–∏ "template" –∏–ª–∏ "fallback"
                "should_contact_manager": bool
            }
        """
        try:
            logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ AI –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {user_query[:100]}...")

            # –ï—Å–ª–∏ AI –æ—Ç–∫–ª—é—á–µ–Ω, —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback
            if not self.is_available():
                return self._create_fallback_response(language)

            # TODO: –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–Ω–∞—è AI –ª–æ–≥–∏–∫–∞
            # 1. –í–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
            # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
            # 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ LLM
            # 4. –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞

            # –ü–æ–∫–∞ —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            return self._create_mock_ai_response(user_query, language)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ AI –∑–∞–ø—Ä–æ—Å–∞: {e}")
            return self._create_fallback_response(language, error=True)

    def _create_mock_ai_response(self, query: str, language: str) -> Dict:
        """–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è AI –æ—Ç–≤–µ—Ç–∞"""
        # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        query_lower = query.lower()

        # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∏—Å–∫–∞
        keywords_map = {
            "ukr": {
                "price": [
                    "—Ü—ñ–Ω–∞",
                    "—Ü—ñ–Ω",
                    "–∫–æ—à—Ç—É—î",
                    "–∫–æ—à—Ç—É—é—Ç—å",
                    "—Å—Ç–æ—ó—Ç—å",
                    "—Å—Ç–æ—è—Ç—å",
                    "–≤–∞—Ä—Ç—ñ—Å—Ç—å",
                    "—Ç–∞—Ä–∏—Ñ",
                ],
                "design": ["–º–∞–∫–µ—Ç", "–¥–∏–∑–∞–π–Ω", "—Ñ–∞–π–ª", "psd", "ai", "pdf", "png"],
                "timeline": [
                    "—Ç–µ—Ä–º—ñ–Ω–∏",
                    "—Ç–µ—Ä–º—ñ–Ω",
                    "—á–∞—Å",
                    "—à–≤–∏–¥–∫–æ",
                    "—Å–∫–æ—Ä–æ",
                    "–≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è",
                    "–≥–æ—Ç–æ–≤–∏–π",
                    "–≥–æ—Ç–æ–≤—ñ",
                ],
                "quality": ["—è–∫—ñ—Å—Ç—å", "–º–∞—Ç–µ—Ä—ñ–∞–ª", "–¥—Ä—É–∫", "–ø–æ–ª—ñ–≥—Ä–∞—Ñ—ñ—è", "–∫–∞—á–µ—Å—Ç–≤–æ"],
                "tshirts": ["—Ñ—É—Ç–±–æ–ª–∫–∞", "—Ñ—É—Ç–±–æ–ª–∫–∏", "–º–∞–π–∫–∞", "–º–∞–π–∫–∏", "–æ–¥—è–≥"],
            },
            "rus": {
                "price": ["—Ü–µ–Ω–∞", "—Ü–µ–Ω", "—Å—Ç–æ–∏—Ç", "—Å—Ç–æ—è—Ç", "—Å—Ç–æ–∏–º–æ—Å—Ç—å", "—Ç–∞—Ä–∏—Ñ"],
                "design": ["–º–∞–∫–µ—Ç", "–¥–∏–∑–∞–π–Ω", "—Ñ–∞–π–ª", "psd", "ai", "pdf", "png"],
                "timeline": [
                    "—Å—Ä–æ–∫–∏",
                    "—Å—Ä–æ–∫",
                    "–≤—Ä–µ–º—è",
                    "–±—ã—Å—Ç—Ä–æ",
                    "—Å–∫–æ—Ä–æ",
                    "–∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ",
                    "–≥–æ—Ç–æ–≤",
                    "–≥–æ—Ç–æ–≤—ã",
                ],
                "quality": ["–∫–∞—á–µ—Å—Ç–≤–æ", "–º–∞—Ç–µ—Ä–∏–∞–ª", "–ø–µ—á–∞—Ç—å", "–ø–æ–ª–∏–≥—Ä–∞—Ñ–∏—è"],
                "tshirts": ["—Ñ—É—Ç–±–æ–ª–∫–∞", "—Ñ—É—Ç–±–æ–ª–∫–∏", "–º–∞–π–∫–∞", "–º–∞–π–∫–∏", "–æ–¥–µ–∂–¥–∞"],
            },
        }

        mock_responses = {
            "ukr": {
                "price": "üî∏ –¶—ñ–Ω–∏ –Ω–∞ –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü—ñ—é –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ —Ç–∏—Ä–∞–∂—É —Ç–∞ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ.\n\n"
                "üìã –í—ñ–∑–∏—Ç–∫–∏: –≤—ñ–¥ 50 –≥—Ä–Ω –∑–∞ 100 —à—Ç\n"
                "üëï –§—É—Ç–±–æ–ª–∫–∏: –≤—ñ–¥ 200 –≥—Ä–Ω\n"
                "üìÑ –õ–∏—Å—Ç—ñ–≤–∫–∏: –≤—ñ–¥ 80 –≥—Ä–Ω –∑–∞ 100 —à—Ç\n\n"
                "üìû –î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞!",
                "design": "üé® –©–æ–¥–æ –º–∞–∫–µ—Ç—ñ–≤:\n\n"
                "‚úÖ –ü—Ä–∏–π–º–∞—î–º–æ —Ñ–∞–π–ª–∏: AI, PSD, PDF, PNG (300+ dpi)\n"
                "‚úÖ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –∫–æ—Ä–µ–∫—Ü—ñ—è –º–∞–∫–µ—Ç—É\n"
                "‚úÖ –ú–æ–∂–µ–º–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –º–∞–∫–µ—Ç –∑ –Ω—É–ª—è\n\n"
                "üìû –ù–∞–¥—ñ—à–ª—ñ—Ç—å –≤–∞—à –º–∞–∫–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏!",
                "timeline": "‚è∞ –¢–µ—Ä–º—ñ–Ω–∏ –≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è:\n\n"
                "üìã –í—ñ–∑–∏—Ç–∫–∏: 1-2 –¥–Ω—ñ\n"
                "üëï –§—É—Ç–±–æ–ª–∫–∏: 2-3 –¥–Ω—ñ\n"
                "üìÑ –õ–∏—Å—Ç—ñ–≤–∫–∏: 1-2 –¥–Ω—ñ\n\n"
                "‚ö° –Ñ –µ–∫—Å–ø—Ä–µ—Å-–≤–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–ª–∞—Ç—É!",
                "tshirts": "üëï –ü—Ä–æ —Ñ—É—Ç–±–æ–ª–∫–∏:\n\n"
                "üí∞ –¶—ñ–Ω–∞: –≤—ñ–¥ 200 –≥—Ä–Ω\n"
                "‚è∞ –¢–µ—Ä–º—ñ–Ω–∏: 2-3 –¥–Ω—ñ\n"
                "üé® –î—Ä—É–∫: —Ü–∏—Ñ—Ä–æ–≤–∏–π, —à–æ–≤–∫–æ–≥—Ä–∞—Ñ—ñ—è\n"
                "üìè –†–æ–∑–º—ñ—Ä–∏: XS-5XL\n\n"
                "üìû –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞!",
                "quality": "üèÜ –Ø–∫—ñ—Å—Ç—å –Ω–∞—à–æ—ó –ø—Ä–æ–¥—É–∫—Ü—ñ—ó:\n\n"
                "‚úÖ –ü—Ä–µ–º—ñ—É–º –º–∞—Ç–µ—Ä—ñ–∞–ª–∏\n"
                "‚úÖ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è\n"
                "‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å —è–∫–æ—Å—Ç—ñ –Ω–∞ –≤—Å—ñ—Ö –µ—Ç–∞–ø–∞—Ö\n"
                "‚úÖ –ì–∞—Ä–∞–Ω—Ç—ñ—è –Ω–∞ –≤—Å—ñ —Ä–æ–±–æ—Ç–∏\n\n"
                "üìû –ú–∞—î–º–æ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏ —è–∫–æ—Å—Ç—ñ - –ø–∏—Ç–∞–π—Ç–µ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞!",
            },
            "rus": {
                "price": "üî∏ –¶–µ–Ω—ã –Ω–∞ –Ω–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–∏—Ä–∞–∂–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.\n\n"
                "üìã –í–∏–∑–∏—Ç–∫–∏: –æ—Ç 50 –≥—Ä–Ω –∑–∞ 100 —à—Ç\n"
                "üëï –§—É—Ç–±–æ–ª–∫–∏: –æ—Ç 200 –≥—Ä–Ω\n"
                "üìÑ –õ–∏—Å—Ç–æ–≤–∫–∏: –æ—Ç 80 –≥—Ä–Ω –∑–∞ 100 —à—Ç\n\n"
                "üìû –î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É!",
                "design": "üé® –ü–æ –º–∞–∫–µ—Ç–∞–º:\n\n"
                "‚úÖ –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ñ–∞–π–ª—ã: AI, PSD, PDF, PNG (300+ dpi)\n"
                "‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –º–∞–∫–µ—Ç–∞\n"
                "‚úÖ –ú–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –º–∞–∫–µ—Ç —Å –Ω—É–ª—è\n\n"
                "üìû –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –º–∞–∫–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!",
                "timeline": "‚è∞ –°—Ä–æ–∫–∏ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:\n\n"
                "üìã –í–∏–∑–∏—Ç–∫–∏: 1-2 –¥–Ω—è\n"
                "üëï –§—É—Ç–±–æ–ª–∫–∏: 2-3 –¥–Ω—è\n"
                "üìÑ –õ–∏—Å—Ç–æ–≤–∫–∏: 1-2 –¥–Ω—è\n\n"
                "‚ö° –ï—Å—Ç—å —ç–∫—Å–ø—Ä–µ—Å—Å-–∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∑–∞ –¥–æ–ø–ª–∞—Ç—É!",
                "tshirts": "üëï –û —Ñ—É—Ç–±–æ–ª–∫–∞—Ö:\n\n"
                "üí∞ –¶–µ–Ω–∞: –æ—Ç 200 –≥—Ä–Ω\n"
                "‚è∞ –°—Ä–æ–∫–∏: 2-3 –¥–Ω—è\n"
                "üé® –ü–µ—á–∞—Ç—å: —Ü–∏—Ñ—Ä–æ–≤–∞—è, —à–µ–ª–∫–æ–≥—Ä–∞—Ñ–∏—è\n"
                "üìè –†–∞–∑–º–µ—Ä—ã: XS-5XL\n\n"
                "üìû –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É!",
                "quality": "üèÜ –ö–∞—á–µ—Å—Ç–≤–æ –Ω–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏:\n\n"
                "‚úÖ –ü—Ä–µ–º–∏—É–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n"
                "‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ\n"
                "‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö\n"
                "‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –≤—Å–µ —Ä–∞–±–æ—Ç—ã\n\n"
                "üìû –£ –Ω–∞—Å –µ—Å—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞ - —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞!",
            },
        }

        # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π
        keywords = keywords_map.get(language, keywords_map["ukr"])
        responses = mock_responses.get(language, mock_responses["ukr"])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        for response_type, word_list in keywords.items():
            for word in word_list:
                if word in query_lower:
                    response = responses.get(response_type)
                    if response:
                        return {
                            "success": True,
                            "answer": response,
                            "confidence": 0.90,  # –í—ã—Å–æ–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –¥–ª—è mock
                            "source": "ai",
                            "should_contact_manager": False,
                        }

        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç
        return self._create_fallback_response(language)

    def _create_fallback_response(self, language: str, error: bool = False) -> Dict:
        """–°–æ–∑–¥–∞–µ—Ç fallback –æ—Ç–≤–µ—Ç –∫–æ–≥–¥–∞ AI –Ω–µ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å"""
        is_work_time = is_business_time()

        if language == "ukr":
            if error:
                base_msg = "üòî –í–∏–±–∞—á—Ç–µ, —Å—Ç–∞–ª–∞—Å—è —Ç–µ—Ö–Ω—ñ—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –∑ AI-–ø–æ–º—ñ—á–Ω–∏–∫–æ–º.\n\n"
            else:
                base_msg = "ü§î –ù–∞ –∂–∞–ª—å, —è –Ω–µ –∑–Ω–∞–π—à–æ–≤ —Ç–æ—á–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è.\n\n"

            if is_work_time:
                msg = base_msg + "üìû –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞—Ä–∞–∑ –æ–Ω–ª–∞–π–Ω —ñ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∞–º –¥–æ–ø–æ–º–æ–∂–µ!"
            else:
                msg = base_msg + "üìû –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º!"
        else:
            if error:
                base_msg = "üòî –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å AI-–ø–æ–º–æ—â–Ω–∏–∫–æ–º.\n\n"
            else:
                base_msg = "ü§î –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å.\n\n"

            if is_work_time:
                msg = base_msg + "üìû –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–µ–π—á–∞—Å –æ–Ω–ª–∞–π–Ω –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–º–æ–∂–µ—Ç!"
            else:
                msg = base_msg + "üìû –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"

        return {
            "success": False,
            "answer": msg,
            "confidence": 0.0,
            "source": "fallback",
            "should_contact_manager": True,
        }


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
ai_service = AIService()


async def process_user_query(user_query: str, user_id: int, language: str = "ukr") -> Dict:
    """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤"""
    return await ai_service.process_query(user_query, user_id, language)
