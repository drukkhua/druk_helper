"""
RAG (Retrieval-Augmented Generation) сервис для AI-помощника
Объединяет поиск по базе знаний с генерацией ответов через OpenAI
"""

import logging
from typing import Dict, List

from src.ai.knowledge_base import knowledge_base

logger = logging.getLogger(__name__)


class RAGService:
    """Сервис для RAG обработки запросов"""

    def __init__(self):
        self.knowledge_base = knowledge_base

    async def get_context_for_query(self, user_query: str, language: str = "ukr") -> str:
        """Получает контекст из базы знаний для запроса пользователя"""
        try:
            # Ищем релевантную информацию
            knowledge_results = self.knowledge_base.search_knowledge(user_query, language, n_results=3)

            if not knowledge_results:
                return ""

            # Формируем контекст из результатов гибридного поиска
            context_parts = []
            for i, item in enumerate(knowledge_results, 1):
                relevance = item.get("relevance_score", 0)
                category = item.get("category", "")
                search_type = item.get("search_type", "unknown")

                # Для результатов поиска по ключевым словам используем низкий порог
                if search_type == "keyword":
                    threshold = 0.1  # Низкий порог для точного совпадения ключевых слов
                else:
                    # Для векторного поиска используем адаптивный порог
                    if "визитки" in user_query.lower() and category == "визитки":
                        threshold = -0.3
                    elif "футболки" in user_query.lower() and category == "футболки":
                        threshold = -0.3
                    else:
                        threshold = 0.0

                if relevance > threshold:
                    answer = item.get("answer", "").strip()
                    if answer:
                        context_parts.append(f"Информация {i}: {answer}")
                        logger.info(f"Добавлен контекст из категории '{category}' ({search_type} поиск) с релевантностью {relevance:.3f}")

            if context_parts:
                context = "\\n\\n".join(context_parts)
                logger.info(f"Найдено {len(context_parts)} релевантных контекстов для запроса: {user_query[:50]}...")
                return context
            else:
                logger.info(f"Не найдено релевантных контекстов для запроса: {user_query[:50]}...")
                return ""

        except Exception as e:
            logger.error(f"Ошибка при получении контекста: {e}")
            return ""

    def create_system_prompt(self, language: str, context: str = "") -> str:
        """Создает системный промпт с учетом контекста из базы знаний"""
        if language == "ukr":
            base_prompt = """Ви - помічник української друкарні та поліграфічної компанії "Яскравий друк".
Ваша задача - відповідати на питання клієнтів про наші послуги.

Наші основні послуги:
- Візитки: професійний друк на якісному папері
- Футболки: цифровий друк та шовкографія
- Листівки: поліграфічні послуги
- Наклейки: різні розміри та матеріали
- Блокноти: корпоративні та персональні

Додаткові послуги:
- Створення макетів з нуля
- Безкоштовна корекція макетів
- Приймаємо файли: AI, PSD, PDF, PNG (300+ dpi)
- Експрес-виготовлення за доплату

Робочий час: Пн-Пт 9:00-18:00, Сб 10:00-15:00"""

            if context:
                return f"""{base_prompt}

ВАЖЛИВО: Нижче наведена актуальна інформація з нашої бази знаний. Використовуйте її для точних відповідей про ціни, терміни та послуги:

{context}

Інструкції:
1. Завжди використовуйте дані з бази знаній для відповідей про ціни та терміни
2. Відповідайте коротко, інформативно та дружньо
3. Використовуйте емодзі для кращого сприйняття
4. Завжди пропонуйте зв'язатися з менеджером для деталей
5. Якщо інформації недостатньо, попросіть клієнта звернутися до менеджера"""
            else:
                return f"""{base_prompt}

Відповідайте коротко, інформативно та дружньо. Використовуйте емодзі для кращого сприйняття. Завжди пропонуйте зв'язатися з менеджером для точних цін та деталей."""

        else:  # Russian
            base_prompt = """Вы - помощник украинской типографии и полиграфической компании "Яскравий друк".
Ваша задача - отвечать на вопросы клиентов о наших услугах.

Наши основные услуги:
- Визитки: профессиональная печать на качественной бумаге
- Футболки: цифровая печать и шелкография
- Листовки: полиграфические услуги
- Наклейки: разные размеры и материалы
- Блокноты: корпоративные и персональные

Дополнительные услуги:
- Создание макетов с нуля
- Бесплатная коррекция макетов
- Принимаем файлы: AI, PSD, PDF, PNG (300+ dpi)
- Экспресс-изготовление за доплату

Рабочие часы: Пн-Пт 9:00-18:00, Сб 10:00-15:00"""

            if context:
                return f"""{base_prompt}

ВАЖНО: Ниже приведена актуальная информация из нашей базы знаний. Используйте её для точных ответов о ценах, сроках и услугах:

{context}

Инструкции:
1. Всегда используйте данные из базы знаний для ответов о ценах и сроках
2. Отвечайте кратко, информативно и дружелюбно
3. Используйте эмодзи для лучшего восприятия
4. Всегда предлагайте связаться с менеджером для деталей
5. Если информации недостаточно, попросите клиента обратиться к менеджеру"""
            else:
                return f"""{base_prompt}

Отвечайте кратко, информативно и дружелюбно. Используйте эмодзи для лучшего восприятия. Всегда предлагайте связаться с менеджером для точных цен и деталей."""

    def get_knowledge_stats(self) -> Dict:
        """Получает статистику базы знаний"""
        return self.knowledge_base.get_statistics()


# Глобальный экземпляр RAG сервиса
rag_service = RAGService()
