#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ –≤ –±–æ—Ç–µ
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—É—é —Ü–µ–ø–æ—á–∫—É: handlers -> routers -> main
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


def check_handlers():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥...")

    try:
        from src.bot.handlers import main as handlers

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
        functions_to_check = ["cmd_analytics", "cmd_sync", "cmd_suggestions"]

        missing_functions = []
        for func_name in functions_to_check:
            if hasattr(handlers, func_name):
                print(f"   ‚úÖ {func_name} - –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"   ‚ùå {func_name} - –ù–ï –ù–ê–ô–î–ï–ù")
                missing_functions.append(func_name)

        if missing_functions:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: {missing_functions}")
            return False
        else:
            print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –Ω–∞–π–¥–µ–Ω—ã")
            return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ handlers: {e}")
        return False


def check_routers():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥ –≤ —Ä–æ—É—Ç–µ—Ä–∞—Ö"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Ä–æ—É—Ç–µ—Ä–∞—Ö...")

    try:
        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Ä–æ—É—Ç–µ—Ä–∞ –∏ –∏—â–µ–º –∫–æ–º–∞–Ω–¥—ã
        router_file = "/Volumes/work/TG_bots/Bot-answers/src/bot/routers.py"

        with open(router_file, "r", encoding="utf-8") as f:
            router_content = f.read()

        commands_to_check = ['Command("analytics")', 'Command("sync")', 'Command("suggestions")']

        missing_commands = []
        for cmd in commands_to_check:
            if cmd in router_content:
                print(f"   ‚úÖ {cmd} - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞")
            else:
                print(f"   ‚ùå {cmd} - –ù–ï –ù–ê–ô–î–ï–ù–ê")
                missing_commands.append(cmd)

        if missing_commands:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–æ—É—Ç–µ—Ä–µ: {missing_commands}")
            return False
        else:
            print("‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ä–æ—É—Ç–µ—Ä–µ")
            return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Ä–æ—É—Ç–µ—Ä–∞: {e}")
        return False


def check_main_integration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å main.py"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å main.py...")

    try:
        from bot_lifecycle import BotLifeCycleManager

        print("‚úÖ BotLifeCycleManager –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ register_handlers –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è
        from src.bot.routers import register_handlers

        print("‚úÖ register_handlers –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å main: {e}")
        return False


def check_admin_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω–æ–≤"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–æ–≤...")

    try:
        from config import ADMIN_USER_IDS

        if ADMIN_USER_IDS:
            print(f"‚úÖ –ê–¥–º–∏–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: {len(ADMIN_USER_IDS)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            print(f"   ID –∞–¥–º–∏–Ω–æ–≤: {ADMIN_USER_IDS}")
        else:
            print("‚ö†Ô∏è –ê–¥–º–∏–Ω—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (ADMIN_USER_IDS –ø—É—Å—Ç–æ–π)")
            print("   –î–æ–±–∞–≤—å—Ç–µ –≤ .env: ADMIN_USER_IDS=123456789,987654321")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–æ–≤: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö Telegram –∫–æ–º–∞–Ω–¥")
    print("=" * 60)

    checks = [
        ("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥", check_handlers),
        ("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ —Ä–æ—É—Ç–µ—Ä–∞—Ö", check_routers),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å main.py", check_main_integration),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–¥–º–∏–Ω–æ–≤", check_admin_config),
    ]

    results = []

    for check_name, check_func in checks:
        try:
            result = check_func()
            results.append((check_name, result))
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ {check_name}: {e}")
            results.append((check_name, False))

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 60)

    all_passed = True
    for check_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{status} - {check_name}")
        if not result:
            all_passed = False

    print("\nüéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    if all_passed:
        print(
            "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ö–æ–º–∞–Ω–¥—ã /analytics –∏ /sync –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤ Telegram –±–æ—Ç–µ."
        )
        print("\nüìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ (–æ—Ç –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞):")
        print("   /analytics - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ AI —Å–∏—Å—Ç–µ–º—ã")
        print("   /sync - —É–º–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π")
        print("   /suggestions - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é")
        print("   /reload - –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)")
        print("   /stats - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)")
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∫–æ–º–∞–Ω–¥.")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö.")

    print(f"\nüí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—Å–∫–∏–π user_id –≤ .env:")
    print(f"   ADMIN_USER_IDS=–≤–∞—à_telegram_user_id")


if __name__ == "__main__":
    main()
