#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Google Sheets —Å —Å–∏—Å—Ç–µ–º–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
"""

import sys
import os
import asyncio
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.integrations.knowledge_sync import knowledge_sync_service
from src.analytics.analytics_service import analytics_service


async def test_knowledge_sync():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–Ω–∞–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Google Sheets + Analytics + ChromaDB...")
    print("=" * 70)

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    print("\nüìä 1. –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
    status = knowledge_sync_service.get_sync_status()
    print(f"   ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {status['last_sync_time'] or '–ù–µ –≤—ã–ø–æ–ª–Ω—è–ª–∞—Å—å'}")
    print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {'‚úÖ' if status['last_sync_success'] else '‚ùå'}")
    print(f"   ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–π: {status['last_sync_changes']}")
    print(f"   ‚Ä¢ Google –¢–∞–±–ª–∏—Ü–∞: {status['spreadsheet_url'][:50]}...")
    print(f"   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã: {', '.join(status['available_sheets'])}")

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    print("\nüîç 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
    sync_needed, reason = await knowledge_sync_service.check_sync_needed()
    print(f"   ‚Ä¢ –ù—É–∂–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {'‚úÖ' if sync_needed else '‚ùå'}")
    print(f"   ‚Ä¢ –ü—Ä–∏—á–∏–Ω–∞: {reason}")

    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–º–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
    print("\nü§ñ 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–º–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é:")
    smart_sync_result = await knowledge_sync_service.smart_sync()

    if smart_sync_result.get("skipped"):
        print(f"   ‚è≠Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞: {smart_sync_result['reason']}")
    elif smart_sync_result["success"]:
        print(f"   ‚úÖ –£–º–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞:")
        print(f"      ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–π: {smart_sync_result['changes']}")
        print(f"      ‚Ä¢ –í—Ä–µ–º—è: {smart_sync_result['duration_ms']}ms")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —É–º–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {smart_sync_result.get('error')}")

    # 4. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    print("\nüîÑ 4. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:")
    full_sync_result = await knowledge_sync_service.full_sync_knowledge_base(force_reload=False)

    if full_sync_result["success"]:
        print(f"   ‚úÖ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞:")
        print(f"      ‚Ä¢ CSV —Ñ–∞–π–ª–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {full_sync_result['csv_files_updated']}")
        print(
            f"      ‚Ä¢ ChromaDB –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {'‚úÖ' if full_sync_result['chromadb_updated'] else '‚ùå'}"
        )
        print(
            f"      ‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞: {'‚úÖ' if full_sync_result['analytics_recorded'] else '‚ùå'}"
        )
        print(f"      ‚Ä¢ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {full_sync_result['duration_ms']}ms")
        print(f"      ‚Ä¢ –û–±—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {full_sync_result['changes']}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∏ –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
        for error in full_sync_result["errors"]:
            print(f"      ‚Ä¢ {error}")

    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    print("\nüìà 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
    try:
        summary = analytics_service.get_analytics_summary(days=1)
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {summary['overall_stats']['total_queries']}")
        print(f"   ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {summary['overall_stats']['total_documents']}")
        print(f"   ‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–≤–µ—Ç–æ–≤: {summary['overall_stats']['answer_rate']:.1f}%")
        print(f"   ‚Ä¢ –ü—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö: {summary['overall_stats']['knowledge_gaps']}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

    # 6. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
    print("\nüí° 6. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é:")
    try:
        suggestions = analytics_service.get_improvement_suggestions()
        if suggestions:
            for i, suggestion in enumerate(suggestions[:3], 1):
                priority = suggestion.get("priority", "medium")
                emoji = {"high": "üî¥", "medium": "üü°", "low": "üü¢"}.get(priority, "üîµ")
                print(f"   {emoji} {i}. {suggestion['description']}")
        else:
            print("   ‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç - —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ!")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {e}")

    # 7. –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    print("\nüéØ 7. –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:")
    final_status = knowledge_sync_service.get_sync_status()
    print(f"   ‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {final_status['last_sync_time']}")
    print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {'‚úÖ' if final_status['last_sync_success'] else '‚ùå'}")
    print(f"   ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {final_status['last_sync_changes']}")

    print("\n" + "=" * 70)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ Telegram –±–æ—Ç–µ:")
    print("   ‚Ä¢ /reload - –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google Sheets")
    print("   ‚Ä¢ /sync - –£–º–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)")
    print("   ‚Ä¢ /stats - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å AI –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π")
    print("   ‚Ä¢ /analytics - –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ AI —Å–∏—Å—Ç–µ–º—ã")
    print("   ‚Ä¢ /suggestions - –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é")
    print("   ‚Ä¢ /health - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã")


if __name__ == "__main__":
    asyncio.run(test_knowledge_sync())
