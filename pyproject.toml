[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
  | __pycache__
  | converted-data
)/
'''

# [tool.isort] - Убран из проекта (слишком капризный для внутреннего использования)
# profile = "black"
# line_length = 100

[tool.flake8]
max-line-length = 100
max-complexity = 10
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
    "W504",  # line break after binary operator
    "E704",  # multiple statements on one line
    "F401",  # imported but unused (handled by isort)
]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    "converted-data",
    "*.egg-info",
    ".tox",
    ".mypy_cache",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:F401,F811",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/converted-data/*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "telegram-bot-answers"
version = "1.0.0"
description = "Telegram bot for printing company customer support"
authors = [
    {name = "Bot Team", email = "bot@example.com"},
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "aiogram>=3.20.0",
    "google-auth>=2.16.0",
    "google-auth-oauthlib>=0.8.0",
    "google-auth-httplib2>=0.1.0",
    "google-api-python-client>=2.70.0",
    "python-dotenv>=1.0.0",
    "logging>=0.4.9.6",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    # "isort>=5.12.0",  # Убран из проекта - слишком капризный
    "mypy>=1.0.0",
    "pytest>=7.2.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
    "bandit>=1.7.5",
    "safety>=3.0.0",
]
test = [
    "pytest>=7.2.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.0",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "test_env", "converted-data", "__pycache__", ".git"]
skips = [
    "B101",  # Skip assert_used test
    "B601",  # Skip paramiko calls
    "B404",  # Skip subprocess import warnings
    "B602",  # Skip shell=True warnings for utility scripts
]
